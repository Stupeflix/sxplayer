name: 'tests Windows'

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  mingw-static:

    runs-on: windows-latest

    steps:

      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64 # Start a 64 bit Mingw environment
          update: true

      - name: Install dependencies
        run: |
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed git"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed mingw-w64-x86_64-{toolchain,ffmpeg}"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm mingw-w64-x86_64-python3-pip"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed mingw-w64-x86_64-meson"

      - name: Setup
        run: |
          $env:CHERE_INVOKING = 'yes'
          C:\msys64\usr\bin\bash -lc "meson setup builddir --default-library static"

      - name: Build
        run: |
          $env:CHERE_INVOKING = 'yes'
          C:\msys64\usr\bin\bash -lc "meson compile -C builddir"

      - name: Test
        run: |
          $env:CHERE_INVOKING = 'yes'
          C:\msys64\usr\bin\bash -lc "meson test -C builddir"

      - name: Upload Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: mingw-static-logs
          path: builddir/meson-logs


  mingw-shared:

    runs-on: windows-latest

    steps:

      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64 # Start a 64 bit Mingw environment
          update: true

      - name: Install dependencies
        run: |
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed git"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed mingw-w64-x86_64-{toolchain,ffmpeg}"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm mingw-w64-x86_64-python3-pip"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed mingw-w64-x86_64-meson"

      - name: Setup
        run: |
          $env:CHERE_INVOKING = 'yes'
          C:\msys64\usr\bin\bash -lc "meson setup builddir --default-library shared"

      - name: Build
        run: |
          $env:CHERE_INVOKING = 'yes'
          C:\msys64\usr\bin\bash -lc "meson compile -C builddir"

      - name: Test
        run: |
          $env:CHERE_INVOKING = 'yes'
          C:\msys64\usr\bin\bash -lc "meson test -C builddir"

      - name: Upload Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: mingw-shared-logs
          path: builddir/meson-logs


  msvc-static:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install meson
      shell: bash
      run: |
        pip install meson

    - name: Install dependencies via vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: 595777db2332a3442b73f9af9f656355f207aec9
        vcpkgTriplet: x64-windows
        vcpkgArguments: pthreads ffmpeg[ffmpeg]
        cleanAfterBuild: false

    - name: vcpkg integrate install
      shell: bash
      run: |
        cd vcpkg && ./vcpkg.exe integrate install

    - name: Setup
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        meson setup builddir --backend vs --buildtype release --default-library static ^
        --pkg-config-path "D:\a\sxplayer\sxplayer\vcpkg\installed\x64-windows\lib\pkgconfig"

    - name: Build
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        meson compile -C builddir

    - name: Test
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        meson test -C builddir

    - name: Upload Logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: msvc-static-logs
        path: builddir/meson-logs


  msvc-shared:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install meson
      shell: bash
      run: |
        pip install meson
    
    - name: Install dependencies via vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: 595777db2332a3442b73f9af9f656355f207aec9
        vcpkgTriplet: x64-windows
        vcpkgArguments: pthreads ffmpeg[ffmpeg]
        cleanAfterBuild: false

    - name: vcpkg integrate install
      shell: bash
      run: |
        cd vcpkg && ./vcpkg.exe integrate install

    - name: Setup
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        meson setup builddir --backend vs --buildtype release --default-library shared ^
        --pkg-config-path "D:\a\sxplayer\sxplayer\vcpkg\installed\x64-windows\lib\pkgconfig"

    - name: Build
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        meson compile -C builddir

    - name: Test
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        meson test -C builddir

    - name: Upload Logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: msvc-shared-logs
        path: builddir/meson-logs
