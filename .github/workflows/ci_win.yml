name: 'tests Windows'

on:
  push:
    branches:
      - 'main'
  pull_request:
  schedule:
      - cron: "0 0 * * 6"  # Run every Saturday at midnight

jobs:
  mingw-static:

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64 # Start a 64 bit Mingw environment
          update: true

      - name: Install dependencies
        run: |
          pacman -S --noconfirm --needed git
          pacman -S --noconfirm --needed mingw-w64-x86_64-{toolchain,ffmpeg}
          pacman -S --noconfirm mingw-w64-x86_64-python3-pip
          pacman -S --noconfirm --needed mingw-w64-x86_64-meson

      - name: Setup
        run: |
          meson setup builddir --default-library static -Dplayer=disabled

      - name: Build
        run: |
          meson compile -C builddir

      - name: Test
        run: |
          meson test -C builddir

      - name: Upload Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: mingw-static-logs
          path: builddir/meson-logs


  mingw-shared:

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64 # Start a 64 bit Mingw environment
          update: true

      - name: Install dependencies
        run: |
          pacman -S --noconfirm --needed git
          pacman -S --noconfirm --needed mingw-w64-x86_64-{toolchain,ffmpeg}
          pacman -S --noconfirm mingw-w64-x86_64-python3-pip
          pacman -S --noconfirm --needed mingw-w64-x86_64-meson

      - name: Setup
        run: |
          meson setup builddir --default-library shared

      - name: Build
        run: |
          meson compile -C builddir

      - name: Test
        run: |
          meson test -C builddir

      - name: Upload Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: mingw-shared-logs
          path: builddir/meson-logs


  msvc-static:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install meson and pkg-config
      shell: bash
      run: |
        pip install meson
        choco install pkgconfiglite

    - name: Install dependencies via vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: e2e6dbdaa45c40fe2e3ec7753b40d92d1dcab16e
        vcpkgTriplet: x64-windows
        vcpkgArguments: ffmpeg[ffmpeg]
        cleanAfterBuild: false

    - name: Setup
      shell: cmd
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x64 && ^
        meson setup builddir --backend vs --buildtype release --default-library static ^
        --pkg-config-path "D:\a\sxplayer\sxplayer\vcpkg\installed\x64-windows\lib\pkgconfig"

    - name: Build
      shell: cmd
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x64 && ^
        meson compile -C builddir

    - name: Test
      shell: cmd
      run: |
        set PATH=D:\a\sxplayer\sxplayer\vcpkg\installed\x64-windows\bin;%PATH%
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x64 && ^
        meson test -C builddir

    - name: Upload Logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: msvc-static-logs
        path: builddir/meson-logs


  msvc-shared:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install meson and pkg-config
      shell: bash
      run: |
        pip install meson
        choco install pkgconfiglite

    - name: Install dependencies via vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: e2e6dbdaa45c40fe2e3ec7753b40d92d1dcab16e
        vcpkgTriplet: x64-windows
        vcpkgArguments: ffmpeg[ffmpeg]
        cleanAfterBuild: false

    - name: Setup
      shell: cmd
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x64 && ^
        meson setup builddir --backend vs --buildtype release --default-library shared ^
        --pkg-config-path "D:\a\sxplayer\sxplayer\vcpkg\installed\x64-windows\lib\pkgconfig"

    - name: Build
      shell: cmd
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x64 && ^
        meson compile -C builddir

    - name: Test
      shell: cmd
      run: |
        set PATH=D:\a\sxplayer\sxplayer\vcpkg\installed\x64-windows\bin;%PATH%
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x64 && ^
        meson test -C builddir

    - name: Upload Logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: msvc-shared-logs
        path: builddir/meson-logs
